uso: git [--version] [--help] [-C <ruta>] [-c <nombre>=<valor>]
           [--exec-path[=<ruta>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<ruta>] [--work-tree=<ruta>] [--namespace=<nombre>]
           <comando> [<args>]

Estos son comandos comunes de Git usados en varias situaciones:

comienza un área de trabajo (ver también: git help tutorial)
   clone      Clona un repositorio dentro de un nuevo directorio
   init       Crea un repositorio de Git vacío o reinicia el que ya existe

trabaja en los cambios actuales (ver también: git help everyday)
   add        Agrega contenido de carpetas al índice
   mv         Mueve o cambia el nombre a archivos, directorios o enlaces simbólicos
   reset      Reinicia el HEAD actual a un estado especifico
   rm         Borra archivos del árbol de trabajo y del índice

examina el historial y el estado (ver también: git help revisions)
   bisect     Use la búsqueda binaria para encontrar el commit que introdujo el bug
   grep       Imprime las líneas que concuerdan con el patron
   log        Muestra los logs de los commits
   show       Muestra varios tipos de objetos
   status     Muestra el estado del árbol de trabajo

crece, marca y ajusta tu historial común
   branch     Lista, crea, o borra ramas
   checkout    Cambia ramas o restaura los archivos de tu árbol de trabajo
   commit     Graba los cambios en tu repositorio
   diff       Muestra los cambios entre commits, commit y árbol de trabajo, etc
   merge      Junta dos o mas historiales de desarrollo juntos
   rebase     Vuelve a aplicar commits en la punta de otra rama
   tag        Crea, lista, borra o verifica un tag de objeto firmado con GPG

colabora (mira también: git help workflows)
   fetch      Descarga objetos y referencias de otro repositorio
   pull       Realiza un fetch e integra con otro repositorio o rama local
   push       Actualiza referencias remotas junto con sus objetos asociados

'git help -a' y 'git help -g' listan los subcomandos disponibles y algunas
guías de concepto. Consulte 'git help <command>' o 'git help <concepto>'
para leer sobre un subcomando o concepto específico.
